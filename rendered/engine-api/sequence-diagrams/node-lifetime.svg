<?xml version="1.0" encoding="utf-8" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd"><svg xmlns="http://www.w3.org/2000/svg" width="948" height="1794" xmlns:xlink="http://www.w3.org/1999/xlink"><source><![CDATA[Title: Validator lifetime
Note over CL, EL: Node is started
CL -> EL: engine_exchangeCapabilities(engine methods supported by CL)
EL --> CL: engine methods supported by EL
CL -> EL: engine_forkchoiceUpdatedV2(ForkchoiceState, null)
Note over EL: I don't have all the \n necessary data available, \n syncing
EL --> CL: {payloadStatus: {status: SYNCING, ...}, payloadId: null}
Note over CL, EL: ...
Note over EL: Sync is completed
CL -> EL: engine_forkchoiceUpdatedV2(ForkchoiceState, null)
EL --> CL: {payloadStatus: {status: VALID, ...}, payloadId: null}
Note over CL, EL: Slot where validator doesn't have to propose starts
CL -> EL: engine_forkchoiceUpdatedV2(ForkchoiceState, null)
EL --> CL: {payloadStatus: {status: VALID, ...}, payloadId: null}
Note over CL: Receive new \n beacon block
Note over CL: Extract \n ExecutionPayload \n from block
CL -> EL: engine_newPayloadV2(ExecutionPayload)
Note over EL: All requirements \n are met and the \n payload is considered \n valid
EL --> CL: {status: VALID, ...}
CL -> EL: engine_forkchoiceUpdatedV2(ForkchoiceState, PayloadAttributes)
EL --> CL: {payloadStatus: {status: VALID, ...}, payloadId: buildProcessId}
Note over EL: Start building \n execution_payload
Note over CL, EL: Slot where validator doesn't have to propose ends
Note over CL, EL: Slot where validator has to propose starts
CL -> EL: engine_forkchoiceUpdatedV2(ForkchoiceState, null)
EL --> CL: {payloadStatus: {status: VALID, ...}, payloadId: null}
Note over CL: Fill BeaconBlock \n up to \n execution_payload
CL -> EL: engine_getPayloadV2(PayloadId)
EL --> CL: {executionPayload, blockValue}
Note over CL: Put the \n ExecutionPayload \n on the BeaconBlock
Note over CL: Compute state_root
Note over CL: Propagate block
Note over CL, EL: Slot where validator has to propose ends
Note over CL, EL: More slots of both types would happen again until the node is shutdown]]></source><desc>Validator lifetime</desc><defs><marker viewBox="0 0 5 5" markerWidth="5" markerHeight="5" orient="auto" refX="5" refY="2.5" id="markerArrowBlock"><path d="M 0 0 L 5 2.5 L 0 5 z"></path></marker><marker viewBox="0 0 9.6 16" markerWidth="4" markerHeight="16" orient="auto" refX="9.6" refY="8" id="markerArrowOpen"><path d="M 9.6,8 1.92,16 0,13.7 5.76,8 0,2.286 1.92,0 9.6,8 z"></path></marker></defs><g class="title"><rect x="10" y="10" width="182.8000030517578" height="26.799999237060547" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="15" y="25.40000057220459" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="15">Validator lifetime</tspan></text></g><g class="actor"><rect x="81.80000114440918" y="46.79999923706055" width="39.20000076293945" height="36.79999923706055" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="91.80000114440918" y="67.19999980926514" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="91.80000114440918">CL</tspan></text></g><g class="actor"><rect x="81.80000114440918" y="1737.599998474121" width="39.20000076293945" height="36.79999923706055" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="91.80000114440918" y="1757.9999990463257" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="91.80000114440918">CL</tspan></text></g><line x1="101.4000015258789" x2="101.4000015258789" y1="83.5999984741211" y2="1737.599998474121" style="stroke-width: 2px;" stroke="#000000" fill="none"></line><g class="actor"><rect x="743.8000011444092" y="46.79999923706055" width="39.20000076293945" height="36.79999923706055" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="753.8000011444092" y="67.19999980926514" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="753.8000011444092">EL</tspan></text></g><g class="actor"><rect x="743.8000011444092" y="1737.599998474121" width="39.20000076293945" height="36.79999923706055" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="753.8000011444092" y="1757.9999990463257" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="753.8000011444092">EL</tspan></text></g><line x1="763.4000015258789" x2="763.4000015258789" y1="83.5999984741211" y2="1737.599998474121" style="stroke-width: 2px;" stroke="#000000" fill="none"></line><g class="note"><rect x="91.4000015258789" y="103.5999984741211" width="682" height="26.799999237060547" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="96.4000015258789" y="118.99999904632568" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="96.4000015258789">Node is started</tspan></text></g><g class="signal"><text x="149.19998931884766" y="157.39999866485596" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="149.19998931884766">engine_exchangeCapabilities(engine methods supported by CL)</tspan></text><line x1="101.4000015258789" x2="763.4000015258789" y1="167.1999969482422" y2="167.1999969482422" style="stroke-width: 2px; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="288.4000015258789" y="194.1999979019165" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="288.4000015258789">engine methods supported by EL</tspan></text><line x1="763.4000015258789" x2="101.4000015258789" y1="203.99999618530273" y2="203.99999618530273" style="stroke-width: 2px; stroke-dasharray: 6px, 2px; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="197.20000457763672" y="230.99999713897705" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="197.20000457763672">engine_forkchoiceUpdatedV2(ForkchoiceState, null)</tspan></text><line x1="101.4000015258789" x2="763.4000015258789" y1="240.79999542236328" y2="240.79999542236328" style="stroke-width: 2px; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="note"><rect x="638.4000015258789" y="260.7999954223633" width="250" height="65.20000457763672" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="643.4000015258789" y="276.19999599456787" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="643.4000015258789">I don't have all the</tspan><tspan dy="1.2em" x="643.4000015258789">necessary data available,</tspan><tspan dy="1.2em" x="643.4000015258789">syncing</tspan></text></g><g class="signal"><text x="163.60001373291016" y="353.0000009536743" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="163.60001373291016">{payloadStatus: {status: SYNCING, ...}, payloadId: null}</tspan></text><line x1="763.4000015258789" x2="101.4000015258789" y1="362.79999923706055" y2="362.79999923706055" style="stroke-width: 2px; stroke-dasharray: 6px, 2px; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="note"><rect x="91.4000015258789" y="382.79999923706055" width="682" height="26.799999237060547" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="96.4000015258789" y="398.19999980926514" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="96.4000015258789">...</tspan></text></g><g class="note"><rect x="676.8000030517578" y="429.5999984741211" width="173.1999969482422" height="26.799999237060547" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="681.8000030517578" y="444.9999990463257" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="681.8000030517578">Sync is completed</tspan></text></g><g class="signal"><text x="197.20000457763672" y="483.39999866485596" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="197.20000457763672">engine_forkchoiceUpdatedV2(ForkchoiceState, null)</tspan></text><line x1="101.4000015258789" x2="763.4000015258789" y1="493.1999969482422" y2="493.1999969482422" style="stroke-width: 2px; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="173.19998931884766" y="520.1999979019165" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="173.19998931884766">{payloadStatus: {status: VALID, ...}, payloadId: null}</tspan></text><line x1="763.4000015258789" x2="101.4000015258789" y1="529.9999961853027" y2="529.9999961853027" style="stroke-width: 2px; stroke-dasharray: 6px, 2px; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="note"><rect x="91.4000015258789" y="549.9999961853027" width="682" height="26.799999237060547" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="96.4000015258789" y="565.3999967575073" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="96.4000015258789">Slot where validator doesn't have to propose starts</tspan></text></g><g class="signal"><text x="197.20000457763672" y="603.7999963760376" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="197.20000457763672">engine_forkchoiceUpdatedV2(ForkchoiceState, null)</tspan></text><line x1="101.4000015258789" x2="763.4000015258789" y1="613.5999946594238" y2="613.5999946594238" style="stroke-width: 2px; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="173.19998931884766" y="640.5999956130981" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="173.19998931884766">{payloadStatus: {status: VALID, ...}, payloadId: null}</tspan></text><line x1="763.4000015258789" x2="101.4000015258789" y1="650.3999938964844" y2="650.3999938964844" style="stroke-width: 2px; stroke-dasharray: 6px, 2px; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="note"><rect x="38.80000305175781" y="670.3999938964844" width="125.19999694824219" height="46" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="43.80000305175781" y="685.799994468689" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="43.80000305175781">Receive new</tspan><tspan dy="1.2em" x="43.80000305175781">beacon block</tspan></text></g><g class="note"><rect x="19.599998474121094" y="736.3999938964844" width="163.60000610351562" height="65.20000457763672" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="24.599998474121094" y="751.799994468689" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="24.599998474121094">Extract</tspan><tspan dy="1.2em" x="24.599998474121094">ExecutionPayload</tspan><tspan dy="1.2em" x="24.599998474121094">from block</tspan></text></g><g class="signal"><text x="254.79999542236328" y="828.5999994277954" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="254.79999542236328">engine_newPayloadV2(ExecutionPayload)</tspan></text><line x1="101.4000015258789" x2="763.4000015258789" y1="838.3999977111816" y2="838.3999977111816" style="stroke-width: 2px; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="note"><rect x="657.5999984741211" y="858.3999977111816" width="211.60000610351562" height="84.4000015258789" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="662.5999984741211" y="873.7999982833862" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="662.5999984741211">All requirements</tspan><tspan dy="1.2em" x="662.5999984741211">are met and the</tspan><tspan dy="1.2em" x="662.5999984741211">payload is considered</tspan><tspan dy="1.2em" x="662.5999984741211">valid</tspan></text></g><g class="signal"><text x="336.4000015258789" y="969.8000001907349" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="336.4000015258789">{status: VALID, ...}</tspan></text><line x1="763.4000015258789" x2="101.4000015258789" y1="979.5999984741211" y2="979.5999984741211" style="stroke-width: 2px; stroke-dasharray: 6px, 2px; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="134.79999542236328" y="1006.5999994277954" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="134.79999542236328">engine_forkchoiceUpdatedV2(ForkchoiceState, PayloadAttributes)</tspan></text><line x1="101.4000015258789" x2="763.4000015258789" y1="1016.3999977111816" y2="1016.3999977111816" style="stroke-width: 2px; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="125.19998931884766" y="1043.399998664856" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="125.19998931884766">{payloadStatus: {status: VALID, ...}, payloadId: buildProcessId}</tspan></text><line x1="763.4000015258789" x2="101.4000015258789" y1="1053.1999969482422" y2="1053.1999969482422" style="stroke-width: 2px; stroke-dasharray: 6px, 2px; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="note"><rect x="676.8000030517578" y="1073.1999969482422" width="173.1999969482422" height="46" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="681.8000030517578" y="1088.5999975204468" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="681.8000030517578">Start building</tspan><tspan dy="1.2em" x="681.8000030517578">execution_payload</tspan></text></g><g class="note"><rect x="91.4000015258789" y="1139.1999969482422" width="682" height="26.799999237060547" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="96.4000015258789" y="1154.5999975204468" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="96.4000015258789">Slot where validator doesn't have to propose ends</tspan></text></g><g class="note"><rect x="91.4000015258789" y="1185.9999961853027" width="682" height="26.799999237060547" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="96.4000015258789" y="1201.3999967575073" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="96.4000015258789">Slot where validator has to propose starts</tspan></text></g><g class="signal"><text x="197.20000457763672" y="1239.7999963760376" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="197.20000457763672">engine_forkchoiceUpdatedV2(ForkchoiceState, null)</tspan></text><line x1="101.4000015258789" x2="763.4000015258789" y1="1249.5999946594238" y2="1249.5999946594238" style="stroke-width: 2px; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="173.19998931884766" y="1276.5999956130981" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="173.19998931884766">{payloadStatus: {status: VALID, ...}, payloadId: null}</tspan></text><line x1="763.4000015258789" x2="101.4000015258789" y1="1286.3999938964844" y2="1286.3999938964844" style="stroke-width: 2px; stroke-dasharray: 6px, 2px; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="note"><rect x="14.800003051757812" y="1306.3999938964844" width="173.1999969482422" height="65.20000457763672" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="19.800003051757812" y="1321.799994468689" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="19.800003051757812">Fill BeaconBlock</tspan><tspan dy="1.2em" x="19.800003051757812">up to</tspan><tspan dy="1.2em" x="19.800003051757812">execution_payload</tspan></text></g><g class="signal"><text x="288.4000015258789" y="1398.5999994277954" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="288.4000015258789">engine_getPayloadV2(PayloadId)</tspan></text><line x1="101.4000015258789" x2="763.4000015258789" y1="1408.3999977111816" y2="1408.3999977111816" style="stroke-width: 2px; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="288.4000015258789" y="1435.399998664856" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="288.4000015258789">{executionPayload, blockValue}</tspan></text><line x1="763.4000015258789" x2="101.4000015258789" y1="1445.1999969482422" y2="1445.1999969482422" style="stroke-width: 2px; stroke-dasharray: 6px, 2px; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="note"><rect x="10" y="1465.1999969482422" width="182.8000030517578" height="65.20000457763672" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="15" y="1480.5999975204468" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="15">Put the</tspan><tspan dy="1.2em" x="15">ExecutionPayload</tspan><tspan dy="1.2em" x="15">on the BeaconBlock</tspan></text></g><g class="note"><rect x="10" y="1550.400001525879" width="182.8000030517578" height="26.799999237060547" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="15" y="1565.8000020980835" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="15">Compute state_root</tspan></text></g><g class="note"><rect x="24.400001525878906" y="1597.2000007629395" width="154" height="26.799999237060547" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="29.400001525878906" y="1612.600001335144" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="29.400001525878906">Propagate block</tspan></text></g><g class="note"><rect x="91.4000015258789" y="1644" width="682" height="26.799999237060547" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="96.4000015258789" y="1659.4000005722046" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="96.4000015258789">Slot where validator has to propose ends</tspan></text></g><g class="note"><rect x="91.4000015258789" y="1690.7999992370605" width="682" height="26.799999237060547" style="stroke-width: 2px;" stroke="#000000" fill="#ffffff"></rect><text x="96.4000015258789" y="1706.1999998092651" style="font-size: 16px; font-family: Andale Mono, monospace;"><tspan x="96.4000015258789">More slots of both types would happen again until the node is shutdown</tspan></text></g></svg>